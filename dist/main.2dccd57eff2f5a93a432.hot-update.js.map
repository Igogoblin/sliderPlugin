{"version":3,"file":"main.2dccd57eff2f5a93a432.hot-update.js","mappings":";;;;;;;;;;;;;AAAO;AACP;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;;;;;;UC7CA","sources":["webpack://MySlider/./src/view/SliderView.ts","webpack://MySlider/webpack/runtime/getFullHash"],"sourcesContent":["export class SliderView {\n    constructor(root) {\n        this.root = root;\n        this.render();\n        this.registerEvens();\n        // this.updateHandlePosition(0); // Initialize handle position\n    }\n    render() {\n        this.root.innerHTML = `\r\n         <div class=\"slider-track\">\r\n        <div class=\"slider-progress\"></div>\r\n        <div class=\"slider-handle\" tabindex=\"0\"></div>\r\n      </div>\r\n        `;\n    }\n    updateHandlePosition(position) {\n        const handle = this.root.querySelector(\".slider-handle\");\n        if (handle) {\n            handle.style.left = `${position}%`;\n        }\n    }\n    registerEvens() {\n        const handle = this.root.querySelector(\".slider-handle\");\n        const track = this.root.querySelector(\".slider-track\");\n        handle.addEventListener(\"mousedown\", (event) => {\n            const onMouseMove = (e) => {\n                const rect = track.getBoundingClientRect();\n                const offsetX = e.clientX - rect.left;\n                const percentage = Math.max(0, Math.min(1, offsetX / rect.width));\n                this.updateHandlePosition(percentage * 100);\n            };\n            const onMouseUp = () => {\n                document.removeEventListener(\"mousemove\", onMouseMove);\n                document.removeEventListener(\"mouseup\", onMouseUp);\n            };\n            document.addEventListener(\"mousemove\", onMouseMove);\n            document.addEventListener(\"mouseup\", onMouseUp);\n        });\n        track.addEventListener(\"click\", (event) => {\n            const rect = track.getBoundingClientRect();\n            const offsetX = event.clientX - rect.left;\n            const percentage = Math.max(0, Math.min(1, offsetX / rect.width));\n            this.updateHandlePosition(percentage * 100);\n        });\n    }\n}\n","__webpack_require__.h = () => (\"d16e8d4004145b44475d\")"],"names":[],"sourceRoot":""}